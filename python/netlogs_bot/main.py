from time import sleep as delay
import configparser
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext,Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardRemove,ReplyKeyboardMarkup, KeyboardButton,InlineKeyboardMarkup, InlineKeyboardButton
from logs.logs import find_accounts,lts
config = configparser.RawConfigParser()
config.read('settings.ini')
TOKEN = input('Enter Token: ')

conusers = configparser.RawConfigParser()
conusers.read('users.ini')


bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())


button_netflix = KeyboardButton('–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–µ—Ç—Ñ–ª–∏–∫—Å üé≤')
button_search = KeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥–∞–º üé≤')
button_google = KeyboardButton('–ê–∫–∫–∞—É–Ω—Ç—ã –≥—É–≥–ª üé≤')
logs_kb = ReplyKeyboardMarkup(resize_keyboard=True)
logs_kb.add(button_netflix,button_search,button_google)

button_go_admin = KeyboardButton('–ê–¥–º–∏–Ω–∫–∞ üîß')
logs_kb_admin = ReplyKeyboardMarkup(resize_keyboard=True)
logs_kb_admin.add(button_go_admin,button_netflix,button_search,button_google)

button_admin_add = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ ‚úÖ')
button_admin_exit = KeyboardButton('–í—ã–π—Ç–∏ ‚ùé')
kb_admin = ReplyKeyboardMarkup(resize_keyboard=True)
kb_admin.add(button_admin_add,button_admin_exit)

def rate_limit(limit: int, key=None):
    def decorator(func):
        setattr(func, 'throttling_rate_limit', limit)
        if key:
            setattr(func, 'throttling_key', key)
        return func
    return decorator

class Id_Form(StatesGroup):
    user_id = State()
    rasilka = State()
    finder = State()

users = []
for x in conusers['user']:
    users.append(conusers['user'][x])

admins = []

for i in config['admins']:
    admins.append(config['admins'][i])

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    if str(message.chat.id) not in str(users):
        with open('users.ini', 'a') as conusr:
            conusr.write('user'+str(len(users)+1)+' = '+str(message.chat.id)+'\n')
        print(f'A user with id was added: {message.chat.id}')
    if str(message.chat.id) not in str(admins):
        await message.reply('–ü—Ä–∏–≤–µ—Ç —è –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±—Ä–∞–ª –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ª–æ–≥–æ–≤ :)', reply_markup=logs_kb)
    if str(message.chat.id) in str(admins):
        await message.reply('–ü—Ä–∏–≤–µ—Ç –∞–¥–º–∏–Ω :)', reply_markup=logs_kb_admin)

@dp.message_handler(text='–ê–¥–º–∏–Ω–∫–∞ üîß')
async def admin_menu(message: types.Message):
    if str(message.chat.id) in str(admins):
        await message.answer('–¢—ã –≤ –∞–¥–º–∏–Ω–∫–µ', reply_markup=kb_admin)
    if str(message.chat.id) not in str(admins):
        await message.reply('–£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ üîí')



@dp.message_handler(text='–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ ‚úÖ')
async def admin_add(message: types.Message,state: FSMContext):
    if str(message.chat.id)==str('1291658598') or str(message.chat.id)==str('1047311374'):
        await Id_Form.user_id.set()
        await message.reply('–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –∞–¥–º–∏–Ω–∞ (–Ω–∞–ø–∏—à–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É)')

    else:
        await message.reply('–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏ üîí')

@dp.message_handler(text='–æ—Ç–º–µ–Ω–∞', state='*')
async def stop(message: types.Message,state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.reply('FSM –æ—Ç–º–µ–Ω–µ–Ω')

@dp.message_handler(state=Id_Form.user_id)
async def add_admin_finish(message: types.Message, state: FSMContext):
    global admins
    user_id = message.text
    if len(user_id)>11:
        await message.reply('–ê–π–¥–∏ –∞–¥–º–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 11!')
    elif len(user_id)<10:
        await message.reply('–ê–π–¥–∏ –∞–¥–º–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ —á–µ–º 11!')
    else:
        with open('settings.ini', 'a') as confile:
            confile.write('admin'+str(len(admins)+1)+' = '+user_id+'\n')
        await state.finish()
        await message.reply('–ê–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω!')
        for i in config['admins']:
            admins.append(config['admins'][i])


@dp.message_handler(text='–í—ã–π—Ç–∏ ‚ùé')
async def exit_admin_menu(message: types.Message):
    await message.reply('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω –º–µ–Ω—é', reply_markup=logs_kb_admin)

@dp.message_handler(text='–ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥–∞–º üé≤')
async def admin_add(message: types.Message,state: FSMContext):
    if str(message.chat.id) in str(admins):
        await Id_Form.finder.set()
        await message.reply('–í–≤–µ–¥–∏—Ç–µ —Ç–æ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏')
    else:
        await message.reply('–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏ üîí')

done = False
accounts_finder = []
@dp.message_handler(state=Id_Form.finder)
async def logs_finder_finish(message: types.Message,state: FSMContext):
    global done
    global accounts_finder
    await Id_Form.finder.set()
    find_text = message.text
    if str(message.chat.id) not in str(admins):
        await message.reply('–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏ üîí')
    if str(message.chat.id) in str(admins):
        if done==False:
            await message.answer('–ù–∞—á–∏–Ω–∞—é —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏')
            accounts_finder.append(find_accounts(find_text))
            await message.reply('–ì–æ—Ç–æ–≤–æ!')
            delay(0.5)
            done=True
            await message.reply(accounts_finder[0:4096])
            await message.reply(accounts_finder[4096:8198])
            accounts_finder = []
        else:
            await message.reply(accounts_google[0][0:4096])
            await message.reply(accounts_google[0][4096:8198])
            accounts_finder = []

accounts_netflix = []
accounts_google = []
done_netflix = False
done_google = False
@dp.message_handler()
async def start_logs(message: types.Message):
    if message['text'] == '–ê–∫–∫–∞—É–Ω—Ç—ã –≥—É–≥–ª üé≤':
        global done_google
        global accounts_google
        if str(message.chat.id) not in str(admins):
            await message.reply('–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏ üîí')
        if str(message.chat.id) in str(admins):
            if done_google==False:
                await message.answer('–ù–∞—á–∏–Ω–∞—é —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏')
                accounts_google.append(find_accounts('google'))
                await message.reply('–ì–æ—Ç–æ–≤–æ!')
                delay(0.5)
                done_google=True
                await message.reply(accounts_google[0][0:4096])
                await message.reply(accounts_google[0][4096:8198])
            else:
                await message.reply(accounts_google[0][0:4096])
                await message.reply(accounts_google[0][4096:8198])
    if message['text'] == '–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–µ—Ç—Ñ–ª–∏–∫—Å üé≤':
        global done_netflix
        global accounts_netflix
        if str(message.chat.id) not in str(admins):
            await message.reply('–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏ üîí')
        if str(message.chat.id) in str(admins):
            if done_netflix==False:
                await message.answer('–ù–∞—á–∏–Ω–∞—é —Å–æ–±–∏—Ä–∞—Ç—å –ª–æ–≥–∏')
                accounts_netflix.append(find_accounts('netflix'))
                await message.reply('–ì–æ—Ç–æ–≤–æ!')
                delay(0.5)
                done_netflix=True
                await message.reply(accounts_netflix[0][0:4096])
                await message.reply(accounts_netflix[0][4096:8198])
            else:
                await message.reply(accounts_netflix[0][0:4096])
                await message.reply(accounts_netflix[0][4096:8198])



if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
